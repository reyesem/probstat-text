"0","#| include: false"
"0",""
"0","# ---- Support Functions"
"0",""
"0","# function: mykable"
"0","# description: Create a default version of kbl()."
"0","mykable <- function(x, ...) {"
"0","  kableExtra::kbl(x, booktabs = TRUE, ...) |>"
"0","    kableExtra::kable_styling("
"0","      bootstrap_options = c('striped', 'responsive'),"
"0","      latex_options = c('striped'),"
"0","      position = 'center'"
"0","    )"
"0","}"
"0",""
"0",""
"0","# function: get_block"
"0","# description: Extract fenced blocks from a QMD document matching some pattern."
"0","repeat_block <- function(x, pattern) {"
"0","  # find start lines"
"0","  startind <- x |>"
"0","    str_detect(pattern = pattern) |>"
"0","    which()"
"0","  "
"0","  # find all fenced blocks"
"0","  allind <- x |>"
"0","    str_detect(fixed(':::')) |>"
"0","    which()"
"0","  "
"0","  # find end of each block"
"0","  endind <- allind[(is.element(allind, startind) |> which()) + 1]"
"0","  "
"0","  map2(startind, endind, ~ x[.x:.y])"
"0","}"
"0",""
"0",""
"0","# function: trim_vector"
"0","# description: Remove empty elements from beginning and end of a vector."
"0","trim_vector <- function(x, side = c('both', 'left', 'right')) {"
"0","  if ((side == 'left') || (side == 'both')) {"
"0","    x <- x[c((which(str_detect(x, '[[:graph:]]'))[1]):(length(x)))]"
"0","  }"
"0","  "
"0","  if ((side == 'right') || (side == 'both')) {"
"0","    x <- x[c(1L:(rev(which(str_detect(x, '[[:graph:]]')))[1]))]"
"0","  }"
"0","  "
"0","  return(x)"
"0","}"
"0",""
"0",""
"0",""
"0","# function: get_terms"
"0","# description: Given a list of fenced blocks, extract terms."
"0","get_terms <- function(x, term = c('reference', 'title', 'text', 'fullblock')) {"
"0","  if (term == 'reference') {"
"0","    map_chr(x, ~ .x |>"
"0","              str_subset(pattern = ':::\\{#') |>"
"0","              str_remove_all(pattern = '(:::\\{#)|(\\})'))"
"0","  } else if (term == 'title') {"
"0","    map_chr(x, ~ .x |> "
"0","              str_subset(pattern = '##') |> "
"0","              str_remove(pattern = '##') |>"
"0","              str_trim())"
"0","  } else if (term == 'text') {"
"0","    map_chr(x, ~ .x |>"
"0","            str_subset(pattern = '(:::)|(##)', negate = TRUE) |>"
"0","            trim_vector(side = 'both') |>"
"0","            str_c(collapse = '\n'))"
"0","    "
"0","    "
"0","  } else if (term == 'fullblock') {"
"0","    map_chr(x, ~ .x |>"
"0","              str_subset(pattern = ':::', negate = TRUE) |>"
"0","              str_c(collapse = '\n'))"
"0","  }"
"0","}"
